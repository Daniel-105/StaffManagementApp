// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StaffManagementApp.Data;

#nullable disable

namespace StaffManagementApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230920143830_createDataBaseAndInitialSeeding")]
    partial class createDataBaseAndInitialSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StaffManagementApp.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hobbies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(2023, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joao@gmail.com",
                            Hobbies = "Thriatlon",
                            Name = "Joao",
                            Team = "A"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria@gmail.com",
                            Hobbies = "Painting",
                            Name = "Maria",
                            Team = "B"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1985, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlos@gmail.com",
                            Hobbies = "Cooking",
                            Name = "Carlos",
                            Team = "A"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1988, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ana@gmail.com",
                            Hobbies = "Reading",
                            Name = "Ana",
                            Team = "B"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1995, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "luis@gmail.com",
                            Hobbies = "Gardening",
                            Name = "Luis",
                            Team = "C"
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1993, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sofia@gmail.com",
                            Hobbies = "Photography",
                            Name = "Sofia",
                            Team = "A"
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(1991, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pedro@gmail.com",
                            Hobbies = "Swimming",
                            Name = "Pedro",
                            Team = "C"
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(1987, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marta@gmail.com",
                            Hobbies = "Traveling",
                            Name = "Marta",
                            Team = "B"
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(1998, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rita@gmail.com",
                            Hobbies = "Playing Guitar",
                            Name = "Rita",
                            Team = "A"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
